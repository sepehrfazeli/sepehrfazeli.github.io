"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[597],{3597:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "renderImageToString": function() { return /* binding */ f; },\n/* harmony export */   "swapPlaceholderImage": function() { return /* binding */ v; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(5861);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7757);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _index_browser_cdba1a30_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9230);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7294);\n/* harmony import */ var react_dom_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7762);\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2369);\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(camelcase__WEBPACK_IMPORTED_MODULE_3__);\nvar d;var u=new WeakMap(),m=navigator.connection||navigator.mozConnection||navigator.webkitConnection,g=["image","loading","isLoading","isLoaded","imgClassName","imgStyle","objectPosition","backgroundColor","objectFit"];function b(t,e){t.style.opacity="1",e&&(e.style.opacity="0");}function h(t,e,o,n,a,r){var i=t.querySelector("[data-main-image]"),c=t.querySelector("[data-placeholder-image]"),s=o.has(e);function l(t){var _this=this;this.removeEventListener("load",l);var e=t.currentTarget,o=new Image();o.src=e.currentSrc,o.decode?o.decode().then(function(){b(_this,c),null==a||a({wasCached:s});}).catch(function(t){b(_this,c),null==r||r(t);}):(b(this,c),null==a||a({wasCached:s}));}return i.addEventListener("load",l),null==n||n({wasCached:s}),Array.from(i.parentElement.children).forEach(function(t){var e=t.getAttribute("data-src"),o=t.getAttribute("data-srcset");e&&(t.removeAttribute("data-src"),t.setAttribute("src",e)),o&&(t.removeAttribute("data-srcset"),t.setAttribute("srcset",o));}),o.add(e),i.complete&&l.call(i,{currentTarget:i}),function(){i&&i.removeEventListener("load",l);};}function v(e,o,n,a,r,i,c){if(!(0,_index_browser_cdba1a30_js__WEBPACK_IMPORTED_MODULE_4__.h)()){var _t;var _b=(g=function g(){_t=h(e,o,n,r,i,c);},"IntersectionObserver"in window?(d||(d=new IntersectionObserver(function(t){t.forEach(function(t){var e;t.isIntersecting&&(null==(e=u.get(t.target))||e(),u.delete(t.target));});},{rootMargin:"4g"!==(null==m?void 0:m.effectiveType)||null!=m&&m.saveData?"2500px":"1250px"})),function(t){return u.set(t,g),d.observe(t),function(){d&&t&&(u.delete(t),d.unobserve(t));};}):function(){return g(),function(){};}),_v=_b(e);var s,l;return"objectFit"in document.documentElement.style||(e.dataset.objectFit=null!=(s=a.objectFit)?s:"cover",e.dataset.objectPosition=""+(null!=(l=a.objectPosition)?l:"50% 50%"),function(){var _ref=(0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(/*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(t){return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0="objectFitPolyfill"in window;if(_context.t0){_context.next=4;break;}_context.next=4;return __webpack_require__.e(/* import() */ 231).then(__webpack_require__.t.bind(__webpack_require__, 7231, 23));case 4:window.objectFitPolyfill(t);case 5:case"end":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()(e)),function(){_t&&_t(),_v();};}var g;return h(e,o,n,r,i,c);}function f(t){var d=t.image,_t$loading=t.loading,u=_t$loading===void 0?"lazy":_t$loading,m=t.isLoading,b=t.isLoaded,h=t.imgClassName,_t$imgStyle=t.imgStyle,v=_t$imgStyle===void 0?{}:_t$imgStyle,f=t.objectPosition,p=t.backgroundColor,_t$objectFit=t.objectFit,y=_t$objectFit===void 0?"cover":_t$objectFit,w=(0,_index_browser_cdba1a30_js__WEBPACK_IMPORTED_MODULE_4__._)(t,g);var j=d.width,C=d.height,E=d.layout,F=d.images,P=d.placeholder,L=d.backgroundColor;return v=(0,_index_browser_cdba1a30_js__WEBPACK_IMPORTED_MODULE_4__.a)({objectFit:y,objectPosition:f,backgroundColor:p},v),(0,react_dom_server__WEBPACK_IMPORTED_MODULE_2__/* .renderToStaticMarkup */ .uS)(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_index_browser_cdba1a30_js__WEBPACK_IMPORTED_MODULE_4__.L,{layout:E,width:j,height:C},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_index_browser_cdba1a30_js__WEBPACK_IMPORTED_MODULE_4__.P,(0,_index_browser_cdba1a30_js__WEBPACK_IMPORTED_MODULE_4__.a)({},(0,_index_browser_cdba1a30_js__WEBPACK_IMPORTED_MODULE_4__.g)(P,b,E,j,C,L,y,f))),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_index_browser_cdba1a30_js__WEBPACK_IMPORTED_MODULE_4__.M,(0,_index_browser_cdba1a30_js__WEBPACK_IMPORTED_MODULE_4__.a)({},w,{width:j,height:C,className:h},(0,_index_browser_cdba1a30_js__WEBPACK_IMPORTED_MODULE_4__.b)(m,b,F,u,v)))));}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3597\n')}}]);